# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), "generated_tests"))

import put_code_2 as module_0  # This should now work



def test_case_0():
    int_0 = 489
    str_0 = module_0.function_put(int_0, int_0, int_0)
    assert str_0 == "Equilateral"


def test_case_1():
    none_type_0 = None
    with pytest.raises(TypeError):
        module_0.function_put(none_type_0, none_type_0, none_type_0)


def test_case_2():
    int_0 = -587
    with pytest.raises(ValueError):
        module_0.function_put(int_0, int_0, int_0)


def test_case_3():
    int_0 = 1
    int_1 = 101
    str_0 = module_0.function_put(int_0, int_1, int_0)
    assert str_0 == "Not a valid triangle"
    str_1 = module_0.function_put(int_0, int_0, int_0)
    assert str_1 == "Equilateral"
    none_type_0 = None
    with pytest.raises(TypeError):
        module_0.function_put(none_type_0, int_0, int_0)


def test_case_4():
    int_0 = 1
    int_1 = 934
    str_0 = module_0.function_put(int_1, int_0, int_1)
    assert str_0 == "Isosceles"


def test_case_5():
    int_0 = 1
    int_1 = 885
    str_0 = module_0.function_put(int_0, int_1, int_1)
    assert str_0 == "Isosceles"
    str_1 = module_0.function_put(int_1, int_0, int_1)
    assert str_1 == "Isosceles"


def test_case_6():
    int_0 = 1
    int_1 = 923
    str_0 = module_0.function_put(int_0, int_1, int_1)
    assert str_0 == "Isosceles"
    str_1 = module_0.function_put(int_0, int_0, int_0)
    assert str_1 == "Equilateral"
    str_2 = module_0.function_put(int_1, int_0, int_0)
    assert str_2 == "Not a valid triangle"
    str_3 = module_0.function_put(int_0, int_0, int_0)
    assert str_3 == "Equilateral"
    none_type_0 = None
    str_4 = module_0.function_put(int_0, int_0, int_0)
    assert str_4 == "Equilateral"
    with pytest.raises(TypeError):
        module_0.function_put(int_0, str_3, none_type_0)


def test_case_7():
    int_0 = 1
    int_1 = 885
    str_0 = module_0.function_put(int_0, int_1, int_1)
    assert str_0 == "Isosceles"
    str_1 = module_0.function_put(int_0, int_0, int_0)
    assert str_1 == "Equilateral"
    str_2 = module_0.function_put(int_0, int_0, int_1)
    assert str_2 == "Not a valid triangle"
    str_3 = module_0.function_put(int_1, int_0, int_1)
    assert str_3 == "Isosceles"
    with pytest.raises(TypeError):
        module_0.function_put(str_2, str_1, int_0)


def test_case_8():
    int_0 = 1
    int_1 = 879
    str_0 = module_0.function_put(int_0, int_1, int_1)
    assert str_0 == "Isosceles"
    str_1 = module_0.function_put(int_0, int_0, int_0)
    assert str_1 == "Equilateral"
    dict_0 = {int_1: int_0, str_0: int_0}
    str_2 = module_0.function_put(int_1, int_1, int_0)
    assert str_2 == "Isosceles"
    with pytest.raises(TypeError):
        module_0.function_put(str_0, dict_0, dict_0)


def test_case_9():
    int_0 = 919
    int_1 = 891
    int_2 = 76
    str_0 = module_0.function_put(int_1, int_2, int_0)
    assert str_0 == "Scalene"
    str_1 = module_0.function_put(int_0, int_0, int_0)
    assert str_1 == "Equilateral"
    str_2 = module_0.function_put(int_0, int_0, int_0)
    assert str_2 == "Equilateral"
    str_3 = module_0.function_put(int_0, int_0, int_0)
    assert str_3 == "Equilateral"
    bool_0 = True
    with pytest.raises(TypeError):
        module_0.function_put(str_2, str_1, bool_0)
